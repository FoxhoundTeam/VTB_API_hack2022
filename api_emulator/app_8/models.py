# generated by fastapi-codegen:
#   filename:  new_yamls/app_4.yaml
#   timestamp: 2022-10-11T21:09:48+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, confloat, conint


class CalcResult(BaseModel):
    contractRate: Optional[float] = Field(10.1, description="Базовая процентная ставка, %", example=10.1)
    kaskoCost: Optional[int] = Field(10000, description="Стоимость КАСКО, руб", example=10000)
    lastPayment: Optional[float] = Field(None, description="Остаточный платёж, руб")
    loanAmount: Optional[float] = Field(1000000.0, description="Сумма кредита, руб", example=1000000.0)
    payment: Optional[float] = Field(50000.0, description="Ежемесячный платёж, руб", example=50000.0)
    subsidy: Optional[float] = Field(None, description="Субсидия от государства, %")
    term: Optional[conint(ge=1, le=7)] = Field(5, description="Срок кредита, лет", example=5)


class CalculatorRequest(BaseModel):
    cost: Optional[confloat(ge=150000.0, le=10000000.0)] = Field(
        850000.0, description="Стоимость автомобиля", example=850000.0
    )
    initialFee: Optional[float] = Field(200000.0, description="Первоначальный взнос, руб", example=200000.0)
    term: Optional[conint(ge=1, le=7)] = Field(5, description="Срок кредита, лет", example=5)


class Cost(BaseModel):
    filled: Optional[bool] = Field(True, description="Вспомогательное поле", example=True, title="Filled")
    max: Optional[int] = Field(10000000, description="Максимальное значение", example=10000000, title="Max")
    min: Optional[int] = Field(1500000, description="Минимальное значение", example=1500000, title="Min")


class IntialFee(BaseModel):
    filled: Optional[bool] = Field(True, description="Вспомогательное поле", example=True, title="Filled")
    max: Optional[int] = Field(100, description="Максимальное значение", example=100, title="Max")
    min: Optional[int] = Field(20, description="Минимальное значение", example=20, title="Min")


class Language(Enum):
    ru_RU = "ru-RU"
    en = "en"


class Payment(BaseModel):
    balanceOut: Optional[int] = Field(950000, description="Остаток погашения", example=950000)
    debt: Optional[int] = Field(40000, description="Основной долг", example=40000)
    order: Optional[int] = Field(1, description="Месяц платежа", example=1)
    payment: Optional[int] = Field(50000, description="Платёж в месяц", example=50000)
    percent: Optional[int] = Field(5000, description="Оплата процентов", example=5000)


class Payments(BaseModel):
    __root__: List[Payment]


class ProgramResponse(BaseModel):
    cost: Optional[Cost] = None
    id: Optional[UUID] = Field(
        None,
        description="Идентификатор программы",
        example="d3c2acc2-b91d-4a4e-b8cb-3be3d6d6d383",
        title="Идентификатор программы",
    )
    programName: Optional[str] = Field(
        "Haval",
        description="Название программы",
        example="Haval",
        title="Название программы",
    )
    programUrl: Optional[str] = Field(
        None,
        description="Ссылка на программу",
        example="/personal/avtokredity/legkovye-avtomobili/haval/",
        title="Ссылка на программу",
    )
    requestUrl: Optional[str] = Field(
        None,
        description="Ссылка на заявку в анкетном сервисе",
        example="//anketa.vtb.ru/avtokredit/",
        title="Ссылка на заявку в анкетном сервисе",
    )


class ResidualPayment(BaseModel):
    filled: Optional[bool] = Field(True, description="Вспомогательное поле", example=True, title="Filled")
    max: Optional[int] = Field(10000000, description="Максимальное значение", example=10000000, title="Max")
    min: Optional[int] = Field(0, description="Минимальное значение", example=0, title="Min")


class Language1(Enum):
    ru_RU = "ru-RU"
    en = "en"


class SpecialCondition(BaseModel):
    excludingConditions: Optional[List[UUID]] = Field(None, description="Массив guid специальных условий")
    id: Optional[UUID] = Field(
        "57ba0183-5988-4137-86a6-3d30a4ed8dc9",
        description="Идентификатор специального условия",
        example="57ba0183-5988-4137-86a6-3d30a4ed8dc9",
    )
    isChecked: Optional[bool] = Field(None, description="Выбрано по умолчанию")
    language: Optional[Language1] = Field("ru-RU", description="Язык (ru-RU или en)", example="ru-RU")
    name: Optional[str] = Field(
        "Страхование жизни",
        description="Наименование специального условия",
        example="Страхование жизни",
    )


class Term(BaseModel):
    filled: Optional[bool] = Field(True, description="Вспомогательное поле", example=True, title="Filled")
    max: Optional[int] = Field(7, description="Максимальное значение", example=7, title="Max")
    min: Optional[int] = Field(1, description="Минимальное значение", example=1, title="Min")


class Ranges(BaseModel):
    cost: Optional[Cost] = None
    initialFee: Optional[IntialFee] = None
    residualPayment: Optional[ResidualPayment] = None
    term: Optional[Term] = None


class CalculateResponse(BaseModel):
    program: Optional[ProgramResponse] = None
    ranges: Optional[Ranges] = None
    result: Optional[CalcResult] = None
