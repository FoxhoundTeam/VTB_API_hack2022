# generated by fastapi-codegen:
#   filename:  new_yamls/app_2.yaml
#   timestamp: 2022-10-11T21:09:58+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Error(BaseModel):
    errorCode: Optional[constr(max_length=5)] = Field(None, description="Код ошибки")
    errorMessage: Optional[constr(max_length=1000)] = Field(None, description="Краткое описание ошибки")


class MobilePayService(Enum):
    APPLEPAY = "APPLEPAY"
    GOOGLEPAY = "GOOGLEPAY"


class CredentialsResponse(BaseModel):
    cardExpiry: constr(max_length=5) = Field(..., description="Окончание срока действия карты ММ/ГГ", example="12/99")
    embossingName: constr(max_length=50) = Field(..., description="Имя держателя", example="ИМЯ ФАМИЛИЯ")
    encryptedPan: constr(max_length=500) = Field(
        ...,
        description="Зашифрованный полный номер карты в base64 кодировке",
        example="1234123412341234",
    )


class CvvResponse(BaseModel):
    Cvv: constr(max_length=500) = Field(..., description="Зашифрованный код CVV в base64 кодировке", example="123")


class ParameterDto(BaseModel):
    name: constr(max_length=500) = Field(..., description="Имя параметра")
    value: constr(max_length=500) = Field(..., description="Значение параметра")


class Status(Enum):
    field_100_CONTINUE = "100 CONTINUE"
    field_101_SWITCHING_PROTOCOLS = "101 SWITCHING_PROTOCOLS"
    field_102_PROCESSING = "102 PROCESSING"
    field_103_CHECKPOINT = "103 CHECKPOINT"
    field_200_OK = "200 OK"
    field_201_CREATED = "201 CREATED"
    field_202_ACCEPTED = "202 ACCEPTED"
    field_203_NON_AUTHORITATIVE_INFORMATION = "203 NON_AUTHORITATIVE_INFORMATION"
    field_204_NO_CONTENT = "204 NO_CONTENT"
    field_205_RESET_CONTENT = "205 RESET_CONTENT"
    field_206_PARTIAL_CONTENT = "206 PARTIAL_CONTENT"
    field_207_MULTI_STATUS = "207 MULTI_STATUS"
    field_208_ALREADY_REPORTED = "208 ALREADY_REPORTED"
    field_226_IM_USED = "226 IM_USED"
    field_300_MULTIPLE_CHOICES = "300 MULTIPLE_CHOICES"
    field_301_MOVED_PERMANENTLY = "301 MOVED_PERMANENTLY"
    field_302_FOUND = "302 FOUND"
    field_302_MOVED_TEMPORARILY = "302 MOVED_TEMPORARILY"
    field_303_SEE_OTHER = "303 SEE_OTHER"
    field_304_NOT_MODIFIED = "304 NOT_MODIFIED"
    field_305_USE_PROXY = "305 USE_PROXY"
    field_307_TEMPORARY_REDIRECT = "307 TEMPORARY_REDIRECT"
    field_308_PERMANENT_REDIRECT = "308 PERMANENT_REDIRECT"
    field_400_BAD_REQUEST = "400 BAD_REQUEST"
    field_401_UNAUTHORIZED = "401 UNAUTHORIZED"
    field_402_PAYMENT_REQUIRED = "402 PAYMENT_REQUIRED"
    field_403_FORBIDDEN = "403 FORBIDDEN"
    field_404_NOT_FOUND = "404 NOT_FOUND"
    field_405_METHOD_NOT_ALLOWED = "405 METHOD_NOT_ALLOWED"
    field_406_NOT_ACCEPTABLE = "406 NOT_ACCEPTABLE"
    field_407_PROXY_AUTHENTICATION_REQUIRED = "407 PROXY_AUTHENTICATION_REQUIRED"
    field_408_REQUEST_TIMEOUT = "408 REQUEST_TIMEOUT"
    field_409_CONFLICT = "409 CONFLICT"
    field_410_GONE = "410 GONE"
    field_411_LENGTH_REQUIRED = "411 LENGTH_REQUIRED"
    field_412_PRECONDITION_FAILED = "412 PRECONDITION_FAILED"
    field_413_PAYLOAD_TOO_LARGE = "413 PAYLOAD_TOO_LARGE"
    field_413_REQUEST_ENTITY_TOO_LARGE = "413 REQUEST_ENTITY_TOO_LARGE"
    field_414_URI_TOO_LONG = "414 URI_TOO_LONG"
    field_414_REQUEST_URI_TOO_LONG = "414 REQUEST_URI_TOO_LONG"
    field_415_UNSUPPORTED_MEDIA_TYPE = "415 UNSUPPORTED_MEDIA_TYPE"
    field_416_REQUESTED_RANGE_NOT_SATISFIABLE = "416 REQUESTED_RANGE_NOT_SATISFIABLE"
    field_417_EXPECTATION_FAILED = "417 EXPECTATION_FAILED"
    field_418_I_AM_A_TEAPOT = "418 I_AM_A_TEAPOT"
    field_419_INSUFFICIENT_SPACE_ON_RESOURCE = "419 INSUFFICIENT_SPACE_ON_RESOURCE"
    field_420_METHOD_FAILURE = "420 METHOD_FAILURE"
    field_421_DESTINATION_LOCKED = "421 DESTINATION_LOCKED"
    field_422_UNPROCESSABLE_ENTITY = "422 UNPROCESSABLE_ENTITY"
    field_423_LOCKED = "423 LOCKED"
    field_424_FAILED_DEPENDENCY = "424 FAILED_DEPENDENCY"
    field_425_TOO_EARLY = "425 TOO_EARLY"
    field_426_UPGRADE_REQUIRED = "426 UPGRADE_REQUIRED"
    field_428_PRECONDITION_REQUIRED = "428 PRECONDITION_REQUIRED"
    field_429_TOO_MANY_REQUESTS = "429 TOO_MANY_REQUESTS"
    field_431_REQUEST_HEADER_FIELDS_TOO_LARGE = "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
    field_451_UNAVAILABLE_FOR_LEGAL_REASONS = "451 UNAVAILABLE_FOR_LEGAL_REASONS"
    field_500_INTERNAL_SERVER_ERROR = "500 INTERNAL_SERVER_ERROR"
    field_501_NOT_IMPLEMENTED = "501 NOT_IMPLEMENTED"
    field_502_BAD_GATEWAY = "502 BAD_GATEWAY"
    field_503_SERVICE_UNAVAILABLE = "503 SERVICE_UNAVAILABLE"
    field_504_GATEWAY_TIMEOUT = "504 GATEWAY_TIMEOUT"
    field_505_HTTP_VERSION_NOT_SUPPORTED = "505 HTTP_VERSION_NOT_SUPPORTED"
    field_506_VARIANT_ALSO_NEGOTIATES = "506 VARIANT_ALSO_NEGOTIATES"
    field_507_INSUFFICIENT_STORAGE = "507 INSUFFICIENT_STORAGE"
    field_508_LOOP_DETECTED = "508 LOOP_DETECTED"
    field_509_BANDWIDTH_LIMIT_EXCEEDED = "509 BANDWIDTH_LIMIT_EXCEEDED"
    field_510_NOT_EXTENDED = "510 NOT_EXTENDED"
    field_511_NETWORK_AUTHENTICATION_REQUIRED = "511 NETWORK_AUTHENTICATION_REQUIRED"


class Status1(Enum):
    field_100_CONTINUE = "100 CONTINUE"
    field_101_SWITCHING_PROTOCOLS = "101 SWITCHING_PROTOCOLS"
    field_102_PROCESSING = "102 PROCESSING"
    field_103_CHECKPOINT = "103 CHECKPOINT"
    field_200_OK = "200 OK"
    field_201_CREATED = "201 CREATED"
    field_202_ACCEPTED = "202 ACCEPTED"
    field_203_NON_AUTHORITATIVE_INFORMATION = "203 NON_AUTHORITATIVE_INFORMATION"
    field_204_NO_CONTENT = "204 NO_CONTENT"
    field_205_RESET_CONTENT = "205 RESET_CONTENT"
    field_206_PARTIAL_CONTENT = "206 PARTIAL_CONTENT"
    field_207_MULTI_STATUS = "207 MULTI_STATUS"
    field_208_ALREADY_REPORTED = "208 ALREADY_REPORTED"
    field_226_IM_USED = "226 IM_USED"
    field_300_MULTIPLE_CHOICES = "300 MULTIPLE_CHOICES"
    field_301_MOVED_PERMANENTLY = "301 MOVED_PERMANENTLY"
    field_302_FOUND = "302 FOUND"
    field_302_MOVED_TEMPORARILY = "302 MOVED_TEMPORARILY"
    field_303_SEE_OTHER = "303 SEE_OTHER"
    field_304_NOT_MODIFIED = "304 NOT_MODIFIED"
    field_305_USE_PROXY = "305 USE_PROXY"
    field_307_TEMPORARY_REDIRECT = "307 TEMPORARY_REDIRECT"
    field_308_PERMANENT_REDIRECT = "308 PERMANENT_REDIRECT"
    field_400_BAD_REQUEST = "400 BAD_REQUEST"
    field_401_UNAUTHORIZED = "401 UNAUTHORIZED"
    field_402_PAYMENT_REQUIRED = "402 PAYMENT_REQUIRED"
    field_403_FORBIDDEN = "403 FORBIDDEN"
    field_404_NOT_FOUND = "404 NOT_FOUND"
    field_405_METHOD_NOT_ALLOWED = "405 METHOD_NOT_ALLOWED"
    field_406_NOT_ACCEPTABLE = "406 NOT_ACCEPTABLE"
    field_407_PROXY_AUTHENTICATION_REQUIRED = "407 PROXY_AUTHENTICATION_REQUIRED"
    field_408_REQUEST_TIMEOUT = "408 REQUEST_TIMEOUT"
    field_409_CONFLICT = "409 CONFLICT"
    field_410_GONE = "410 GONE"
    field_411_LENGTH_REQUIRED = "411 LENGTH_REQUIRED"
    field_412_PRECONDITION_FAILED = "412 PRECONDITION_FAILED"
    field_413_PAYLOAD_TOO_LARGE = "413 PAYLOAD_TOO_LARGE"
    field_413_REQUEST_ENTITY_TOO_LARGE = "413 REQUEST_ENTITY_TOO_LARGE"
    field_414_URI_TOO_LONG = "414 URI_TOO_LONG"
    field_414_REQUEST_URI_TOO_LONG = "414 REQUEST_URI_TOO_LONG"
    field_415_UNSUPPORTED_MEDIA_TYPE = "415 UNSUPPORTED_MEDIA_TYPE"
    field_416_REQUESTED_RANGE_NOT_SATISFIABLE = "416 REQUESTED_RANGE_NOT_SATISFIABLE"
    field_417_EXPECTATION_FAILED = "417 EXPECTATION_FAILED"
    field_418_I_AM_A_TEAPOT = "418 I_AM_A_TEAPOT"
    field_419_INSUFFICIENT_SPACE_ON_RESOURCE = "419 INSUFFICIENT_SPACE_ON_RESOURCE"
    field_420_METHOD_FAILURE = "420 METHOD_FAILURE"
    field_421_DESTINATION_LOCKED = "421 DESTINATION_LOCKED"
    field_422_UNPROCESSABLE_ENTITY = "422 UNPROCESSABLE_ENTITY"
    field_423_LOCKED = "423 LOCKED"
    field_424_FAILED_DEPENDENCY = "424 FAILED_DEPENDENCY"
    field_425_TOO_EARLY = "425 TOO_EARLY"
    field_426_UPGRADE_REQUIRED = "426 UPGRADE_REQUIRED"
    field_428_PRECONDITION_REQUIRED = "428 PRECONDITION_REQUIRED"
    field_429_TOO_MANY_REQUESTS = "429 TOO_MANY_REQUESTS"
    field_431_REQUEST_HEADER_FIELDS_TOO_LARGE = "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
    field_451_UNAVAILABLE_FOR_LEGAL_REASONS = "451 UNAVAILABLE_FOR_LEGAL_REASONS"
    field_500_INTERNAL_SERVER_ERROR = "500 INTERNAL_SERVER_ERROR"
    field_501_NOT_IMPLEMENTED = "501 NOT_IMPLEMENTED"
    field_502_BAD_GATEWAY = "502 BAD_GATEWAY"
    field_503_SERVICE_UNAVAILABLE = "503 SERVICE_UNAVAILABLE"
    field_504_GATEWAY_TIMEOUT = "504 GATEWAY_TIMEOUT"
    field_505_HTTP_VERSION_NOT_SUPPORTED = "505 HTTP_VERSION_NOT_SUPPORTED"
    field_506_VARIANT_ALSO_NEGOTIATES = "506 VARIANT_ALSO_NEGOTIATES"
    field_507_INSUFFICIENT_STORAGE = "507 INSUFFICIENT_STORAGE"
    field_508_LOOP_DETECTED = "508 LOOP_DETECTED"
    field_509_BANDWIDTH_LIMIT_EXCEEDED = "509 BANDWIDTH_LIMIT_EXCEEDED"
    field_510_NOT_EXTENDED = "510 NOT_EXTENDED"
    field_511_NETWORK_AUTHENTICATION_REQUIRED = "511 NETWORK_AUTHENTICATION_REQUIRED"


class Type(Enum):
    ValidationError = "ValidationError"
    ProviderError = "ProviderError"


class ServiceSubError(BaseModel):
    response: Optional[constr(max_length=5000)] = Field(None, description="Ответ провайдера")
    status: Optional[Status1] = Field(None, description="Статус ошибки", example="500 INTERNAL_SERVER_ERROR")
    type: Type = Field(..., description="Тип ошибки")
    field: Optional[constr(max_length=100)] = Field(None, description="Поле")
    message: Optional[constr(max_length=5000)] = Field(None, description="Сообщение")
    object: Optional[constr(max_length=100)] = Field(None, description="Объект")
    rejectedValue: Optional[constr(max_length=5000)] = Field(None, description="Значение поля")


class GenericError(BaseModel):
    httpCode: constr(max_length=3) = Field(..., description="HTTP код ошибки", example="400")
    httpMessage: Optional[constr(max_length=255)] = Field(
        None, description="HTTP описание ошибки", example="Bad Request"
    )
    moreInformation: Optional[constr(max_length=255)] = Field(
        None, description="Подробная информация об ошибке", example="Bad Request"
    )
    error: Optional[Error] = None


class GenerateWalletTokenRequest(BaseModel):
    callId: constr(max_length=50) = Field(..., description="Идентификатор вызова")
    correlationId: Optional[constr(max_length=50)] = Field(
        None, description="Идентификатор для отслеживания цепочки вызовов"
    )
    inputParameters: List[ParameterDto] = Field(..., description="Входные параметры")
    mobilePayService: MobilePayService = Field(..., description="Вид кошелька")
    sessionId: constr(max_length=50) = Field(..., description="Идентификатор сессии")


class TokensDto(BaseModel):
    tokens: Optional[List[ParameterDto]] = Field(None, description="Токены кошельков")


class ServiceError(BaseModel):
    debugMessage: Optional[constr(max_length=5000)] = Field(None, description="Подробное сообщение об ошибке")
    message: Optional[constr(max_length=500)] = Field(None, description="Сообщение об ошибке")
    status: Status = Field(..., description="Статус ошибки", example="500 INTERNAL_SERVER_ERROR")
    subErrors: Optional[List[ServiceSubError]] = Field(None, description="Ошибки по цепочке вызовов")
    timestamp: Optional[datetime] = Field(None, description="Время возникновения ошибки")
