# generated by fastapi-codegen:
#   filename:  new_yamls/app_10.yaml
#   timestamp: 2022-10-11T21:09:44+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, confloat, constr


class Error(BaseModel):
    errorCode: Optional[constr(max_length=5)] = Field(None, description="Код ошибки")
    errorMessage: Optional[constr(max_length=1000)] = Field(None, description="Краткое описание ошибки")


class ProductType(Enum):
    ACCOUNT = "ACCOUNT"


class AuthCodeDtoRs(BaseModel):
    lifeTime: constr(max_length=255) = Field(..., description="Время жизни кода подтверждения в секундах")


class ProductType1(Enum):
    CARD = "CARD"


class ClientApproveDtoRq(BaseModel):
    code: Optional[constr(max_length=255)] = Field(None, description="Код для проверки", example="1234")
    purpose: constr(max_length=255) = Field(..., description="Цель запроса")


class ClientApproveDtoRs(BaseModel):
    code: AuthCodeDtoRs


class Type(Enum):
    ACCOUNT = "ACCOUNT"
    CARD = "CARD"


class ClientProductDtoRq(BaseModel):
    id: constr(max_length=255) = Field(
        ...,
        description="ID продукта клиента",
        example="1329CD96444B428895BEF56AF8016246",
    )
    type: Type = Field(..., description="Тип продукта клиента")


class ConfirmPaymentDtoRq(BaseModel):
    clientApprove: Optional[ClientApproveDtoRq] = None
    id: constr(max_length=255) = Field(..., description="ID платежа")


class CurrencyDto(BaseModel):
    code: constr(max_length=3) = Field(..., description="Код", example="RUB")


class ErrorFieldDtoRs(BaseModel):
    code: constr(max_length=255) = Field(..., description="Код ошибки")
    message: constr(max_length=255) = Field(..., description="Текст ошибки", example="Некорректные данные")
    name: constr(max_length=255) = Field(..., description="Ключ/название ошибочного поля")


class MobileNumberDto(BaseModel):
    number: constr(max_length=11) = Field(..., description="Номер мобильного телефона", example="9008001122")


class ValidFormat(BaseModel):
    __root__: constr(max_length=255) = Field(..., description="Шаблоны валидных номеров")


class MobileNumberFormatsDto(BaseModel):
    validFormats: List[ValidFormat] = Field(..., description="Шаблоны валидных номеров", max_items=36)


class MobilePaymentCheckDto(BaseModel):
    pdf: constr(max_length=5000000) = Field(..., description="Чек в формате пдв, закодированный в base64")


class MoneyDto(BaseModel):
    amount: confloat(ge=-999999999.0, le=999999999.0) = Field(..., description="Сумма", example=600.0)
    currency: Optional[CurrencyDto] = None


class PaySumLimitDto(BaseModel):
    maxSum: MoneyDto
    minSum: MoneyDto


class PaymentActionsDto(BaseModel):
    autoPaymentByBalance: bool = Field(
        ...,
        description="Возможно создание автоплатежа по сумме на балансе",
        example=True,
    )
    autoPaymentByDate: bool = Field(..., description="Возможно создание автоплатежа на дату", example=True)
    check: bool = Field(..., description="Возможно получение квитанции", example=True)
    remind: bool = Field(..., description="Возможно создание напоминания", example=True)
    repeat: bool = Field(..., description="Возможен повтор", example=True)
    template: bool = Field(..., description="Возможно создание шаблона", example=True)


class CreationChannel(Enum):
    MOBILE = "MOBILE"


class SourceType(Enum):
    NEW = "NEW"
    REPEAT = "REPEAT"
    TEMPLATE = "TEMPLATE"
    REMINDER = "REMINDER"
    AUTOPAYMENT = "AUTOPAYMENT"


class Status(Enum):
    PROCESSING = "PROCESSING"
    EXECUTED = "EXECUTED"
    REFUSED = "REFUSED"
    RSA_REVIEW = "RSA_REVIEW"
    ERROR = "ERROR"


class SubStatus(Enum):
    LIMIT_EXCEEDED = "LIMIT_EXCEEDED"


class PaymentOptionsDto(BaseModel):
    paySumLimit: PaySumLimitDto
    recommendedSums: List[MoneyDto] = Field(..., description="Список рекомендованных сумм платежа")


class SystemId(Enum):
    MINERVA = "MINERVA"
    MS = "MS"


class OperationActionParameterDtoRs(BaseModel):
    enabled: bool = Field(..., description="Включено/выключено действие над услугой ПУ")
    systemId: SystemId = Field(..., description="Идентификатор системы")


class SubType(BaseModel):
    __root__: constr(max_length=36) = Field(..., description="Подтип ПУ", example="MOBILE_BY_PHONE")


class Type1(Enum):
    CONTRACT = "CONTRACT"


class StartPaymentDtoRq(BaseModel):
    serviceProviderId: Optional[constr(max_length=255)] = Field(
        None, description="Идентификатор поставщика услуги", example="1"
    )


class StartPaymentDtoRs(BaseModel):
    mobileNumber: MobileNumberFormatsDto
    paymentOptions: PaymentOptionsDto


class StatusDtoRs(BaseModel):
    code: constr(max_length=255) = Field(..., description="Код статуса")
    message: Optional[constr(max_length=255)] = Field(
        None, description="Сообщение", example="Ошибка валидации запроса на оплату"
    )


class GenericError(BaseModel):
    httpCode: constr(max_length=3) = Field(..., description="HTTP код ошибки", example="400")
    httpMessage: Optional[constr(max_length=255)] = Field(
        None, description="HTTP описание ошибки", example="Bad Request"
    )
    moreInformation: Optional[constr(max_length=255)] = Field(
        None, description="Подробная информация об ошибке", example="Bad Request"
    )
    error: Optional[Error] = None


class AcceptancePaymentDtoRq(BaseModel):
    clientProduct: ClientProductDtoRq
    mobileNumber: MobileNumberDto
    paySum: MoneyDto
    serviceProviderId: constr(max_length=255) = Field(..., description="Идентификатор поставщика услуг", example="1")


class AccountDtoRs(BaseModel):
    alias: Optional[constr(max_length=255)] = Field(None, description="Пользовательское название продукта")
    balance: MoneyDto
    entityId: Optional[constr(max_length=255)] = Field(None, description="Номер счета")
    entityName: Optional[constr(max_length=255)] = Field(None, description="Имя продукта")
    entityType: Optional[constr(max_length=255)] = Field(None, description="Тип продукта")
    productType: ProductType = Field(..., description="Общий тип продукта")
    publicId: constr(max_length=255) = Field(..., description="Публичный идентификатор продукта")


class CardDtoRs(BaseModel):
    alias: Optional[constr(max_length=255)] = Field(None, description="Пользовательское название продукта")
    balance: MoneyDto
    entityId: Optional[constr(max_length=255)] = Field(None, description="Номер счета")
    entityName: Optional[constr(max_length=255)] = Field(None, description="Имя продукта")
    entityType: Optional[constr(max_length=255)] = Field(None, description="Тип продукта")
    productType: ProductType1 = Field(..., description="Общий тип продукта")
    publicId: constr(max_length=255) = Field(..., description="Публичный идентификатор продукта")


class ClientProductDtoRs(BaseModel):
    account: Optional[AccountDtoRs] = None
    card: Optional[CardDtoRs] = None


class ClientProductsDtoRq(BaseModel):
    paySum: Optional[MoneyDto] = None


class ClientProductsDtoRs(BaseModel):
    accounts: Optional[List[AccountDtoRs]] = Field(None, description="Список счетов клиента")
    cards: Optional[List[CardDtoRs]] = Field(None, description="Список карт клиента")


class ErrorDtoRs(BaseModel):
    errors: Optional[List[ErrorFieldDtoRs]] = Field(None, description="Список полей с ошибками")
    status: StatusDtoRs


class OperationActionsDtoRs(BaseModel):
    payment: OperationActionParameterDtoRs
    template: OperationActionParameterDtoRs
    autoPaymentByDate: OperationActionParameterDtoRs
    autoPaymentByBalance: OperationActionParameterDtoRs
    invoice: OperationActionParameterDtoRs
    repeat: OperationActionParameterDtoRs
    remind: OperationActionParameterDtoRs
    subscription: OperationActionParameterDtoRs


class ServiceProviderDtoRs(BaseModel):
    actions: Optional[OperationActionsDtoRs] = None
    categoryIds: Optional[List[constr(max_length=255)]] = Field(
        None, description="Список ID категорий, в которых доступен поставщик"
    )
    description: Optional[constr(max_length=255)] = Field(
        None, description="Описание ПУ", example="Описание поставщика"
    )
    id: constr(max_length=255) = Field(..., description="ID поставщика услуги", example="1")
    name: constr(max_length=36) = Field(..., description="Наименование поставщика услуги", example="Какой-то поставщик")
    shortName: Optional[constr(max_length=255)] = Field(None, description="Короткое название ПУ", example="Поставщик")
    subTypes: Optional[List[SubType]] = Field(None, description="Подтип ПУ", example=["MOBILE_BY_PHONE"], max_items=36)
    type: Type1 = Field(..., description="Тип ПУ", example="CONTRACT")


class DraftDto(BaseModel):
    clientProduct: ClientProductDtoRs
    commission: MoneyDto
    id: constr(max_length=36) = Field(..., description="ID платежа", example="4d9065bc-55f7-4317-b728-5097344dc72f")
    paySum: MoneyDto
    serviceProvider: ServiceProviderDtoRs
    totalSum: MoneyDto


class MobileNumberDtoRs(BaseModel):
    number: constr(max_length=11) = Field(..., description="Номер мобильного телефона", example="79008001122")
    paymentOptions: PaymentOptionsDto
    serviceProvider: ServiceProviderDtoRs


class PaymentDtoRs(BaseModel):
    actions: PaymentActionsDto
    clientProduct: ClientProductDtoRs
    commission: Optional[MoneyDto] = None
    confirmTransactionId: Optional[constr(max_length=36)] = Field(
        None,
        description="ID транзакции подтверждения платежа кодом подтверждения",
        example="4d9065bc-55f7-4317-b728-5097344dc72f",
    )
    createdAt: datetime = Field(..., description="Время создания платежа")
    creationChannel: CreationChannel = Field(..., description="Канал создания платежа")
    description: constr(max_length=255) = Field(..., description="Назначение платежа")
    documentId: constr(max_length=36) = Field(..., description="Номер платежа", example="1234567890")
    id: constr(max_length=36) = Field(..., description="ID платежа", example="4d9065bc-55f7-4317-b728-5097344dc72f")
    limitTransactionId: Optional[constr(max_length=36)] = Field(
        None,
        description="ID транзакции лимита платежа",
        example="4d9065bc-55f7-4317-b728-5097344dc72f",
    )
    mobileNumber: MobileNumberDto
    paySum: MoneyDto
    serviceProvider: ServiceProviderDtoRs
    sourceSystemId: constr(max_length=255) = Field(
        ...,
        description="ID системы создавшей платеж",
        example="payments-acceptance-mobile",
    )
    sourceType: SourceType = Field(..., description="Тип источника платежа")
    status: Status = Field(..., description="Статус платежа")
    subStatus: Optional[SubStatus] = Field(None, description="Под статус платежа")
    totalSum: MoneyDto
    updatedAt: datetime = Field(..., description="Время обновления платежа")
    userMdmId: constr(max_length=255) = Field(..., description="ID пользователя", example="1234567890")


class AcceptancePaymentDtoRs(BaseModel):
    payment: Optional[DraftDto] = None
    status: StatusDtoRs


class ConfirmPaymentDtoRs(BaseModel):
    approve: Optional[ClientApproveDtoRs] = None
    payment: Optional[PaymentDtoRs] = None
    status: StatusDtoRs
