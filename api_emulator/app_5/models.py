# generated by fastapi-codegen:
#   filename:  new_yamls/app_6.yaml
#   timestamp: 2022-10-11T21:09:45+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class Address(BaseModel):
    addressName: Optional[str] = Field(
        None,
        description="Полный адрес",
        example="123456, Россия, Москва, ул.Ленина, 23, 3, 234",
    )


class Oauth2ErrorType(Enum):
    invalid_scope = "invalid_scope"
    unauthorized_client = "unauthorized_client"
    invalid_request = "invalid_request"
    access_denied = "access_denied"
    unsupported_response_type = "unsupported_response_type"
    agreement_not_signed = "agreement_not_signed"
    server_error = "server_error"
    temporarily_unavailable = "temporarily_unavailable"
    invalid_grant = "invalid_grant"


class Oauth2Error(BaseModel):
    error: Oauth2ErrorType
    error_message: Optional[str] = Field(None, description="Краткое описание ошибки")


class Scope(Enum):
    surname = "surname"
    name = "name"
    patronymic = "patronymic"
    gender = "gender"
    birthPlace = "birthPlace"
    birthDate = "birthDate"
    maritalStatus = "maritalStatus"
    mainMobilePhone = "mainMobilePhone"
    mobilePhone = "mobilePhone"
    email = "email"
    registrationAddress = "registrationAddress"
    temporaryAddress = "temporaryAddress"
    actualAddress = "actualAddress"
    inn = "inn"
    snils = "snils"
    mdmId = "mdmId"
    openid = "openid"
    rfPassport = "rfPassport"


class Gender(Enum):
    M = "M"
    F = "F"
    U = "U"


class MaritalStatus(Enum):
    SINGLE = "SINGLE"
    DIVORCED = "DIVORCED"
    WIDOW = "WIDOW"
    MARRIED = "MARRIED"
    REMARRIAGE = "REMARRIAGE"
    CIVIL_MARRIAGE = "CIVIL_MARRIAGE"
    UNKNOWN = "UNKNOWN"


class GrantType(Enum):
    code = "code"
    refresh_token = "refresh_token"


class Oauth2TokenRequest(BaseModel):
    grant_type: GrantType
    code: Optional[str] = Field(None, description="Код авторизации")
    refresh_token: Optional[str] = Field(None, description="Токен обновления")


class Oauth2TokenResponse(BaseModel):
    scope: Optional[str] = Field(
        None,
        description="Список разрешений, выданных для текущего access токена",
        example="name email surname",
    )
    access_token: str = Field(..., description="Токен доступа")
    refresh_token: str = Field(..., description="Токен для обновления access_token и id_token")
    id_token: Optional[str] = None


class ResponseType(Enum):
    code = "code"


class ResponseType1(Enum):
    code = "code"


class ResponseType2(Enum):
    code = "code"


class Passport(BaseModel):
    series: Optional[str] = Field(None, description="Серия", example="5414")
    number: Optional[str] = Field(None, description="Номер", example="435685")
    issueDate: Optional[date] = Field(None, description="Дата   выдачи", example="2013-06-03")
    departmentDoc: Optional[str] = Field(
        None,
        description="Ведомство, к которому относится документ",
        example="ГУВМ МВД России",
    )
    lastName: Optional[str] = Field(None, description="Фамилия", example="Иванов")
    firstName: Optional[str] = Field(None, description="Имя", example="Иван")
    middleName: Optional[str] = Field(None, description="Отчество", example="Иванович")
    gender: Optional[Gender] = None
    birthDate: Optional[date] = Field(None, description="Дата   рождения", example="2000-05-06")
    birthPlace: Optional[str] = Field(None, description="Место   рождения", example="г. Курск")
    issuedBy: Optional[str] = Field(
        None,
        description="Кем   выдан паспорт",
        example="Гагаринским отделением милиции №5 по г. Москве МВД России",
    )
    issueId: Optional[str] = Field(None, description="Код подразделения", example="540-056")


class Oauth2MeResponse(BaseModel):
    surname: Optional[str] = Field(None, description="Фамилия", example="Иванович")
    name: Optional[str] = Field(None, description="Имя", example="Иван")
    patronymic: Optional[str] = Field(None, description="Отчество", example="Иванович")
    gender: Optional[Gender] = None
    birthPlace: Optional[str] = Field(None, description="Место рождения", example="г. Курск")
    birthDate: Optional[date] = Field(None, description="Дата рождения")
    maritalStatus: Optional[MaritalStatus] = None
    mainMobilePhone: Optional[str] = Field(
        None, description="Основной (доверенный) номер телефона", example="79201234567"
    )
    mobilePhone: Optional[str] = Field(None, description="Мобильный телефон", example="79201234567")
    email: Optional[str] = Field(None, description="Электронная почта", example="iivanov@gmail.com")
    registrationAddress: Optional[Address] = None
    temporaryAddress: Optional[Address] = None
    actualAddress: Optional[Address] = None
    snils: Optional[str] = Field(None, description="СНИЛС", example="111-222-333 33")
    inn: Optional[str] = Field(None, description="ИНН", example="7721357717689")
    rfPassport: Optional[Passport] = None
    mdmId: Optional[str] = Field(None, description="Идентификатор пользователя в МДМ", example="1071688359")


class UserInfo(BaseModel):
    surname: Optional[str] = Field(None, description="Фамилия", example="Иванович")
    name: Optional[str] = Field(None, description="Имя", example="Иван")
    patronymic: Optional[str] = Field(None, description="Отчество", example="Иванович")
    gender: Optional[Gender] = None
    birthPlace: Optional[str] = Field(None, description="Место рождения", example="г. Курск")
    birthDate: Optional[date] = Field(None, description="Дата рождения")
    maritalStatus: Optional[MaritalStatus] = None
    mainMobilePhone: Optional[str] = Field(
        None, description="Основной (доверенный) номер телефона", example="79201234567"
    )
    mobilePhone: Optional[str] = Field(None, description="Мобильный телефон", example="79201234567")
    email: Optional[str] = Field(None, description="Электронная почта", example="iivanov@gmail.com")
    registrationAddress: Optional[Address] = None
    temporaryAddress: Optional[Address] = None
    actualAddress: Optional[Address] = None
    snils: Optional[str] = Field(None, description="СНИЛС", example="111-222-333 33")
    inn: Optional[str] = Field(None, description="ИНН", example="7721357717689")
    rfPassport: Optional[Passport] = None
    mdmId: Optional[str] = Field(None, description="Идентификатор пользователя в МДМ", example="1071688359")
