version: '3.8'

services:
  backend:
    build: 
      dockerfile: ./compose/backend/Dockerfile
      context: .
    command: bash -c "uvicorn --port 8000 --host 0.0.0.0 app.main:app"
    env_file:
      - .env
    volumes:
      - ./data:/data
    ports:
      - 127.0.0.1:8000:8000
    depends_on:
      - db

  emulator:
    build: 
      dockerfile: ./compose/api_emulator/Dockerfile
      context: .
    command: bash -c "python start_all.py"
    env_file:
      - .env
    ports:
      - 127.0.0.1:8001:8001
      - 127.0.0.1:8002:8002
      - 127.0.0.1:8003:8003
      - 127.0.0.1:8004:8004
      - 127.0.0.1:8005:8005
      - 127.0.0.1:8006:8006
      - 127.0.0.1:8007:8007
      - 127.0.0.1:8008:8008
      - 127.0.0.1:8009:8009
      - 127.0.0.1:8010:8010
      - 127.0.0.1:8011:8011
      - 127.0.0.1:8012:8012
      - 127.0.0.1:8013:8013
      - 127.0.0.1:8014:8014

  db:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - ./db:/data/db

  broker:
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=testpassa5k65nlRBIFZurEo1rHZqpEqtCUN6WF4
    ports:
      - "127.0.0.1:15672:15672"
      - "127.0.0.1:5672:5672"
    restart: unless-stopped

  history_module:
    build:
      dockerfile: ./compose/api_history_module/Dockerfile
      context: .
    command: bash -c "celery -A api_call_task worker -B"
    env_file:
      - .env
    depends_on:
      - db
      - backend
      - broker

  frontend:
    build: 
      dockerfile: ./compose/frontend/Dockerfile
      context: .
    restart: unless-stopped

  nginx:
    build: 
      dockerfile: ./compose/nginx/Dockerfile
      context: .
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
    ports:
      - 127.0.0.1:${HTTP_PORT}:80
    volumes:
      - ./mounts/uwsgi:/uwsgi
      - ./mounts/logs/nginx:/var/log/nginx
      - ./mounts/media:/webapp/media:ro
      - ./mounts/static:/webapp/static:ro
